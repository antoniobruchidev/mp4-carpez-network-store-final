"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from .env import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config(str('SECRET_KEY'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'antoniobruchidev.uk.to',
    'localhost',
    config('HEROKU_DOMAIN'),
    '141.0.153.251',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'home',
    'products',
    'bag',
    'checkout',
    'dashboard',
    'reviews',
    'email_relay',
    'crispy_forms',
    'crispy_tailwind',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'templates', 'allauth'),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'bag.context.bag'
            ],
        },
    },
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"

CRISPY_TEMPLATE_PACK = "tailwind"

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_FORMS = {
    'login': 'ecommerce.forms.CustomLoginForm',
    'signup': 'ecommerce.forms.CustomSignupForm',
    }

WSGI_APPLICATION = 'ecommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

USE_AWS = config(str('USE_AWS'), cast=bool, default=False)

AWS_ACCESS_KEY_ID = config(str('AWS_ACCESS_KEY_ID'))
AWS_SECRET_ACCESS_KEY = config(str('AWS_SECRET_ACCESS_KEY'))
AWS_STORAGE_BUCKET_NAME = config(str('AWS_STORAGE_BUCKET_NAME'))
AWS_DEFAULT_ACL = 'public-read'
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}

STATICFILES_DIRS = [
    ("css", "/home/carpez/dev/ecommerce/mp4-ecommerce-app/static/css"),
    ("images", "/home/carpez/dev/ecommerce/mp4-ecommerce-app/static/images"),
    ("tailwind", "/home/carpez/dev/ecommerce/mp4-ecommerce-app/static/tailwind"),
]

if USE_AWS:
    # aws settings should work
    # s3 static settings
    AWS_STATIC_LOCATION = 'static'
    AWS_MEDIA_LOCATION = 'media'
    STORAGES = {
        'default': {  
            'BACKEND': 'custom_storages.MediaStorage'
            },
        "staticfiles": {
            "BACKEND": 'custom_storages.StaticStorage'
            }
        }
    MEDIA_ROOT = 'media'
    # STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_STATIC_LOCATION}/'
    # DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_MEDIA_LOCATION}/'
else:
    STATIC_URL = 'staticfiles/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

    MEDIA_URL = 'media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MY_DEVELOPMENT = config(str('MY_DEVELOPMENT'), cast=bool, default=False)

if MY_DEVELOPMENT:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    EMAIL_HOST_USER = 'info@carpez-network.com'
else:
    USE_TLS = config(str('EMAIL_USE_TLS'), cast=bool, default=False)
    USE_SSL = config(str('EMAIL_USE_SSL'), cast=bool, default=False)
    # default backend
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = config(str("EMAIL_HOST"))
    EMAIL_HOST_PORT = int(config(str('EMAIL_HOST_PORT')))
    EMAIL_HOST_USER = config(str("EMAIL_HOST_USER"))
    EMAIL_HOST_PASSWORD = config(str("EMAIL_HOST_PASSWORD"))
    EMAIL_USE_TLS = config(str('EMAIL_USE_TLS'), cast=bool, default=True)
    EMAIL_USE_SSL = config(str('EMAIL_USE_SSL'), cast=bool, default=False)
    DEFAULT_FROM_MAIL = EMAIL_HOST_USER
    
    DEBUG = MY_DEVELOPMENT

ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'none'
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
ACCOUNT_USERNAME_MIN_LENGTH = 4
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'

FREE_DELIVERY_TRESHOLD = 50

STANDARD_DELIVERY_PERCENTAGE = 10

STRIPE_SECRET_KEY = config('STRIPE_SECRET_KEY')
STRIPE_PUBLIC_KEY = config('STRIPE_PUBLIC_KEY')
WH_SECRET_KEY = config('STRIPE_WEBHOOK_SECRET')
STRIPE_CURRENCY = 'gbp'
